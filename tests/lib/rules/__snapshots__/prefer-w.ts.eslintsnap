# eslint-snapshot-rule-tester format: v1


Test: prefer-w >> invalid
Code:
  1 | /[0-9a-zA-Z_]/
    |  ^~~~~~~~~~~~ [1]

Output:
  1 | /\w/

[1] Unexpected character class '[0-9a-zA-Z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 | /[0-9a-zA-Z_#]/
    |  ^~~~~~~~~~~~~ [1]

Output:
  1 | /[\w#]/

[1] Unexpected character class ranges '[0-9a-zA-Z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 | /[\da-zA-Z_#]/
    |  ^~~~~~~~~~~~ [1]

Output:
  1 | /[\w#]/

[1] Unexpected character class ranges '[\da-zA-Z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 | /[0-9a-z_[\s&&\p{ASCII}]]/iv
    |  ^~~~~~~~~~~~~~~~~~~~~~~~ [1]

Output:
  1 | /[\w[\s&&\p{ASCII}]]/iv

[1] Unexpected character class ranges '[0-9a-z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 | /[0-9a-z_]/i
    |  ^~~~~~~~~ [1]

Output:
  1 | /\w/i

[1] Unexpected character class '[0-9a-z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 | /[^0-9a-zA-Z_]/
    |  ^~~~~~~~~~~~~ [1]

Output:
  1 | /\W/

[1] Unexpected character class '[^0-9a-zA-Z_]'. Use '\W' instead.
---


Test: prefer-w >> invalid
Code:
  1 | /[^0-9A-Z_]/i
    |  ^~~~~~~~~~ [1]

Output:
  1 | /\W/i

[1] Unexpected character class '[^0-9A-Z_]'. Use '\W' instead.
---


Test: prefer-w >> invalid
Code:
  1 |
  2 |             const s = "[0-9A-Z_]"
    |                        ^~~~~~~~~ [1]
  3 |             new RegExp(s, 'i')
  4 |             

Output:
  1 |
  2 |             const s = "\\w"
  3 |             new RegExp(s, 'i')
  4 |             

[1] Unexpected character class '[0-9A-Z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 |
  2 |             const s = "[0-9"+"A-Z_]"
    |                       ^~~~~~~~~~~~~~ [1]
  3 |             new RegExp(s, 'i')
  4 |             

Output: unchanged

[1] Unexpected character class '[0-9A-Z_]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 |
  2 |             const s = "[0-9A-Z_c]"
    |                        ^~~~~~~~~~ [1]
  3 |             new RegExp(s, 'i')
  4 |             

Output:
  1 |
  2 |             const s = "\\w"
  3 |             new RegExp(s, 'i')
  4 |             

[1] Unexpected character class '[0-9A-Z_c]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 |
  2 |             const s = "[0-9"+"A-Z_c]"
    |                       ^~~~~~~~~~~~~~~ [1]
  3 |             new RegExp(s, 'i')
  4 |             

Output: unchanged

[1] Unexpected character class '[0-9A-Z_c]'. Use '\w' instead.
---


Test: prefer-w >> invalid
Code:
  1 |
  2 |             const s = "[0-9A-Z_-]"
    |                        ^~~~~~~~~~ [1]
  3 |             new RegExp(s, 'i')
  4 |             

Output:
  1 |
  2 |             const s = "[\\w-]"
  3 |             new RegExp(s, 'i')
  4 |             

[1] Unexpected character class ranges '[0-9A-Z_]'. Use '\w' instead.
---
